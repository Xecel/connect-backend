package com.example.connect_back.Account;// UserService.javaimport jakarta.persistence.Tuple;import java.util.List;import lombok.Data;import lombok.RequiredArgsConstructor;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import org.springframework.stereotype.Service;@Data@Servicepublic class AccountService {    private final AccountRepository accountRepository;    private final BCryptPasswordEncoder bCryptPasswordEncoder;    public List<Account> findAllAccounts() {        return accountRepository.findAll();    }    public Account saveAccount(Account account) {        String hashedPassword = bCryptPasswordEncoder.encode(account.getUserPassword());        account.setUserPassword(hashedPassword);        return accountRepository.save(account);    }    public boolean authAccount(Account account) {        String hashedPassword = accountRepository.findAccountByUserId(account.getUserId()).getUserPassword();        boolean passwordMatches = bCryptPasswordEncoder.matches(account.getUserPassword(), hashedPassword);        return passwordMatches;    }}