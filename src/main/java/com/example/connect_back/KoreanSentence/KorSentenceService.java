package com.example.connect_back.KoreanSentence;import java.util.List;import lombok.Data;import org.springframework.data.jpa.repository.Query;import org.springframework.data.repository.query.Param;import org.springframework.stereotype.Service;@Data@Servicepublic class KorSentenceService {    private final KorSentenceRepository korSentenceRepository;    public List<KorSentence> findAllKoreanSentence() {        return korSentenceRepository.findAll();    }    public void saveSentences(String level, List<String> sentences) {        for (String sentence : sentences) {            if (!korSentenceRepository.existsBySentence(sentence)) {                KorSentence korSentence = new KorSentence(level, sentence);                korSentenceRepository.save(korSentence);            } else {                System.out.println(sentence + " is duplicated...");            }        }    }    @Query(value = "SELECT * FROM korean_sentence WHERE level = :level ORDER BY RAND() LIMIT 1", nativeQuery = true)    public String getSentence(@Param("level") String level) {        return korSentenceRepository.getRandomSentenceByLevel(level);    }}